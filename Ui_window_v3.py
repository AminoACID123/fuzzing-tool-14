# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'd:\VSCode_Project\python_project\fuzzProject\window_v3.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import sys
import re
import os

import Ui_dialog_fuzz_v2 as fuzzDialogPY
import Ui_dialog_seed_v2 as seedDialogPY
import Ui_dialog_selectTarget as targetDialogPY
import staticAnalysis as sa


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(770, 580)
        MainWindow.setIconSize(QtCore.QSize(20, 20))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.startFuzzBtn = QtWidgets.QPushButton(self.centralwidget)
        self.startFuzzBtn.setGeometry(QtCore.QRect(439, 470, 271, 61))
        self.startFuzzBtn.setIconSize(QtCore.QSize(40, 40))
        self.startFuzzBtn.setObjectName("startFuzzBtn")
        self.title = QtWidgets.QLabel(self.centralwidget)
        self.title.setGeometry(QtCore.QRect(300, 20, 200, 31))
        self.title.setLineWidth(1)
        self.title.setIndent(-1)
        self.title.setObjectName("title")
        self.chooseFileGroup = QtWidgets.QGroupBox(self.centralwidget)
        self.chooseFileGroup.setGeometry(QtCore.QRect(80, 50, 631, 71))
        self.chooseFileGroup.setObjectName("chooseFileGroup")
        self.CFileLoc = QtWidgets.QTextBrowser(self.chooseFileGroup)
        self.CFileLoc.setEnabled(True)
        self.CFileLoc.setGeometry(QtCore.QRect(20, 20, 481, 31))
        self.CFileLoc.setObjectName("CFileLoc")
        self.chooseCBtn = QtWidgets.QPushButton(self.chooseFileGroup)
        self.chooseCBtn.setGeometry(QtCore.QRect(520, 20, 93, 31))
        self.chooseCBtn.setAutoDefault(False)
        self.chooseCBtn.setDefault(False)
        self.chooseCBtn.setFlat(False)
        self.chooseCBtn.setObjectName("chooseCBtn")
        self.staticAnalysisGroup = QtWidgets.QGroupBox(self.centralwidget)
        self.staticAnalysisGroup.setGeometry(QtCore.QRect(80, 130, 341, 121))
        self.staticAnalysisGroup.setObjectName("staticAnalysisGroup")
        self.targetSetInfo = QtWidgets.QTextBrowser(self.staticAnalysisGroup)
        self.targetSetInfo.setGeometry(QtCore.QRect(20, 30, 201, 71))
        self.targetSetInfo.setObjectName("targetSetInfo")
        self.SAByCppcheckBtn = QtWidgets.QPushButton(self.staticAnalysisGroup)
        self.SAByCppcheckBtn.setGeometry(QtCore.QRect(240, 30, 93, 31))
        self.SAByCppcheckBtn.setObjectName("SAByCppcheckBtn")
        self.SAByManBtn = QtWidgets.QPushButton(self.staticAnalysisGroup)
        self.SAByManBtn.setGeometry(QtCore.QRect(240, 70, 93, 31))
        self.SAByManBtn.setObjectName("SAByManBtn")
        self.seedInputGroup = QtWidgets.QGroupBox(self.centralwidget)
        self.seedInputGroup.setGeometry(QtCore.QRect(440, 130, 271, 121))
        self.seedInputGroup.setObjectName("seedInputGroup")
        self.seedInputText = QtWidgets.QPlainTextEdit(self.seedInputGroup)
        self.seedInputText.setGeometry(QtCore.QRect(20, 30, 231, 71))
        self.seedInputText.setObjectName("seedInputText")
        self.stopOptionGroup = QtWidgets.QGroupBox(self.centralwidget)
        self.stopOptionGroup.setGeometry(QtCore.QRect(80, 260, 341, 181))
        self.stopOptionGroup.setObjectName("stopOptionGroup")
        self.stopByTime = QtWidgets.QRadioButton(self.stopOptionGroup)
        self.stopByTime.setGeometry(QtCore.QRect(20, 80, 115, 19))
        self.stopByTime.setObjectName("stopByTime")
        self.stopByTC = QtWidgets.QRadioButton(self.stopOptionGroup)
        self.stopByTC.setGeometry(QtCore.QRect(20, 130, 131, 19))
        self.stopByTC.setObjectName("stopByTC")
        self.stopByCrash = QtWidgets.QRadioButton(self.stopOptionGroup)
        self.stopByCrash.setGeometry(QtCore.QRect(20, 30, 161, 19))
        self.stopByCrash.setObjectName("stopByCrash")
        self.fuzzTime = QtWidgets.QSpinBox(self.stopOptionGroup)
        self.fuzzTime.setGeometry(QtCore.QRect(150, 70, 81, 31))
        self.fuzzTime.setObjectName("fuzzTime")
        self.timeUnit = QtWidgets.QComboBox(self.stopOptionGroup)
        self.timeUnit.setGeometry(QtCore.QRect(240, 70, 91, 31))
        self.timeUnit.setObjectName("timeUnit")
        self.timeUnit.addItem("min")
        self.timeUnit.addItem("hrs")
        self.TCUnitLabel = QtWidgets.QLabel(self.stopOptionGroup)
        self.TCUnitLabel.setGeometry(QtCore.QRect(240, 124, 72, 21))
        self.TCUnitLabel.setObjectName("TCUnitLabel")
        self.stopByTCNum = QtWidgets.QLineEdit(self.stopOptionGroup)
        self.stopByTCNum.setGeometry(QtCore.QRect(150, 120, 81, 31))
        self.stopByTCNum.setObjectName("stopByTCNum")
        self.instrOptionGroup = QtWidgets.QGroupBox(self.centralwidget)
        self.instrOptionGroup.setGeometry(QtCore.QRect(440, 260, 271, 181))
        self.instrOptionGroup.setObjectName("instrOptionGroup")
        self.funcLevelRBtn = QtWidgets.QRadioButton(self.instrOptionGroup)
        self.funcLevelRBtn.setGeometry(QtCore.QRect(30, 50, 115, 19))
        self.funcLevelRBtn.setObjectName("funcLevelRBtn")
        self.branchLevelRBtn = QtWidgets.QRadioButton(self.instrOptionGroup)
        self.branchLevelRBtn.setGeometry(QtCore.QRect(30, 110, 115, 19))
        self.branchLevelRBtn.setObjectName("branchLevelRBtn")
        self.otherOptionGroup = QtWidgets.QGroupBox(self.centralwidget)
        self.otherOptionGroup.setGeometry(QtCore.QRect(80, 450, 341, 105))
        self.otherOptionGroup.setObjectName("otherOptionGroup")
        self.label = QtWidgets.QLabel(self.otherOptionGroup)
        self.label.setGeometry(QtCore.QRect(20, 20, 131, 31))
        self.label.setObjectName("label")
        self.TCNumPerCyc = QtWidgets.QLineEdit(self.otherOptionGroup)
        self.TCNumPerCyc.setGeometry(QtCore.QRect(150, 20, 81, 31))
        self.TCNumPerCyc.setObjectName("TCNumPerCyc")
        self.label_2 = QtWidgets.QLabel(self.otherOptionGroup)
        self.label_2.setGeometry(QtCore.QRect(240, 20, 31, 31))
        self.label_2.setObjectName("label_2")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 770, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        # 以下为手写内容
        self.popSeedDialogBtn = QtWidgets.QPushButton(self.seedInputGroup)
        self.popSeedDialogBtn.setGeometry(QtCore.QRect(90, 40, 93, 31))
        self.popSeedDialogBtn.setIconSize(QtCore.QSize(40, 40))
        self.popSeedDialogBtn.setObjectName("popSeedDialogBtn")
        self.seedLabel = QtWidgets.QLabel(self.seedInputGroup)
        self.seedLabel.setGeometry(QtCore.QRect(20, 75, 300, 31))
        self.seedLabel.setObjectName("seedLabel")
        self.funcLevelRBtn.setChecked(True)
        self.stopByCrash.setChecked(True)
        self.label_3 = QtWidgets.QLabel(self.otherOptionGroup)
        self.label_3.setGeometry(QtCore.QRect(20, 60, 131, 31))
        self.label_3.setObjectName("label")
        self.timeoutLEdit = QtWidgets.QLineEdit(self.otherOptionGroup)
        self.timeoutLEdit.setGeometry(QtCore.QRect(150, 60, 81, 31))
        self.timeoutLEdit.setObjectName("TCNumPerCyc")
        self.label_4 = QtWidgets.QLabel(self.otherOptionGroup)
        self.label_4.setGeometry(QtCore.QRect(240, 60, 31, 31))
        self.label_4.setObjectName("label_2")

        self.startFuzzBtn.clicked.connect(self.popFuzzDialog)
        self.popSeedDialogBtn.clicked.connect(self.popSeedDialog)
        self.chooseCBtn.clicked.connect(self.chooseCFile)
        self.SAByCppcheckBtn.clicked.connect(self.SAByCppcheck)
        self.SAByManBtn.clicked.connect(self.popTargetDialog)

        regExp1 = QtCore.QRegExp("^([1-9]\d{0,2}|1000)$")
        self.TCNumPerCyc.setValidator(QtGui.QRegExpValidator(regExp1))
        self.timeoutLEdit.setValidator(QtGui.QRegExpValidator(regExp1))
        regExp2 = QtCore.QRegExp("^\\d+$")
        self.stopByTCNum.setValidator(QtGui.QRegExpValidator(regExp2))
        self.seedInputText.hide()
        self.seedDialog = QtWidgets.QDialog()
        self.uiSeed = seedDialogPY.Ui_Dialog()
        self.uiSeed.setupUi(self.seedDialog)
        # 手写内容结束

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "基于代码结构的模糊测试工具"))
        self.startFuzzBtn.setText(_translate("MainWindow", "开始测试"))
        self.title.setText(_translate("MainWindow", "基于代码结构的模糊测试工具"))
        self.chooseFileGroup.setTitle(_translate("MainWindow", "选择文件"))
        self.chooseCBtn.setText(_translate("MainWindow", "选择C文件"))
        self.staticAnalysisGroup.setTitle(_translate("MainWindow", "选择目标"))
        # self.targetSetInfo.setHtml(_translate("MainWindow", "目标集信息"))
        self.SAByCppcheckBtn.setText(_translate("MainWindow", "cppcheck"))
        self.SAByManBtn.setText(_translate("MainWindow", "手动选择"))
        self.seedInputGroup.setTitle(_translate("MainWindow", "种子输入"))
        # self.seedInputText.setPlainText(_translate("MainWindow", "在这里输入初始测试用例，也可以不输入"))
        self.stopOptionGroup.setTitle(_translate("MainWindow", "终止条件"))
        self.stopByTime.setText(_translate("MainWindow", "按时间"))
        self.stopByTC.setText(_translate("MainWindow", "按测试用例数"))
        self.stopByCrash.setText(_translate("MainWindow", "检测到错误就停止"))
        self.timeUnit.setItemText(0, _translate("MainWindow", "分钟"))
        self.timeUnit.setItemText(1, _translate("MainWindow", "小时"))
        self.TCUnitLabel.setText(_translate("MainWindow", "个"))
        self.stopByTCNum.setText(_translate("MainWindow", "2000"))
        self.instrOptionGroup.setTitle(_translate("MainWindow", "插桩粒度"))
        self.funcLevelRBtn.setText(_translate("MainWindow", "函数级"))
        self.branchLevelRBtn.setText(_translate("MainWindow", "分支级"))
        self.otherOptionGroup.setTitle(_translate("MainWindow", "其他设置"))
        self.label.setText(_translate("MainWindow", "每轮测试用例生成"))
        self.TCNumPerCyc.setText(_translate("MainWindow", "100"))
        self.label_2.setText(_translate("MainWindow", "个"))

        # 以下为手写内容
        self.seedInputText.setPlaceholderText("在这里输入初始测试用例，也可以不输入")
        self.TCNumPerCyc.setPlaceholderText("1-1000")
        self.popSeedDialogBtn.setText(_translate("MainWindow", "手动输入"))
        self.seedLabel.setText(_translate("MainWindow", "如果不手动输入，系统会自动生成"))
        self.targetSetInfo.setPlaceholderText("目标集信息")
        self.label_3.setText(_translate("MainWindow", "测试用例超时时间："))
        self.timeoutLEdit.setText(_translate("MainWindow", "10"))
        self.timeoutLEdit.setPlaceholderText("1-1000")
        self.label_4.setText(_translate("MainWindow", "秒"))
        self.CFileLoc.setPlaceholderText("C文件位置")
        # 手写内容结束

    # 以下为手写内容
    def chooseCFile(self, Filepath):
        m = QtWidgets.QFileDialog.getOpenFileName(None,"choose file","C:/Users/Radon/Desktop/","c files (*.c)")
        path = re.sub("/",r"\\",m[0])
        self.CFileLoc.setText(path)

    def popFuzzDialog(self):
        source_loc = self.CFileLoc.toPlainText()
        self.fuzzDialog = QtWidgets.QDialog()
        self.uiFuzz = fuzzDialogPY.Ui_Dialog()
        self.uiFuzz.setupUi(self.fuzzDialog)
        self.fuzzDialog.show()
        self.uiFuzz.startFuzz(source_loc,ui,self.uiFuzz,self.uiSeed)
    
    def popSeedDialog(self):
        source_loc = self.CFileLoc.toPlainText()
        if os.path.exists(source_loc):
            self.seedDialog.show()
            self.uiSeed.setVariableName(self.CFileLoc.toPlainText())
        else:
            self.CFileLoc.setText("被测对象不存在!")
    
    def popTargetDialog(self):
        source_loc = self.CFileLoc.toPlainText()
        self.targetDialog = QtWidgets.QDialog()
        self.uiTarget =targetDialogPY.Ui_Dialog()
        self.uiTarget.setupUi(self.targetDialog)
        self.targetDialog.show()
        self.uiTarget.setValues(ui,source_loc)
        # self.uiFuzz.startFuzz(source_loc,ui,self.uiFuzz,self.uiSeed)
    
    def SAByCppcheck(self):
        self.targetSetInfo.clear()
        self.SAResult = sa.analyze(self.CFileLoc.toPlainText())
        if len(self.SAResult) == 0:
            self.targetSetInfo.setText("暂无目标!")
            return
        if isinstance(self.SAResult,str):
            self.targetSetInfo.setText(self.SAResult)
            return
        for i in range(len(self.SAResult)):
            self.targetSetInfo.append(self.SAResult[i])
    # 手写内容结束

# 补充多目标测试的实验数据
if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    mainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(mainWindow)
    mainWindow.show()
    sys.exit(app.exec_())