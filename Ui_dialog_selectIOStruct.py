'''
Author: Radon
Date: 2021-07-19 19:27:59
LastEditors: Radon
LastEditTime: 2021-07-20 16:09:16
Description: 选择输入与输出格式的界面
'''
# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'd:\Project_VSCode\python_project\fuzzProject\dialog_selectInputAndOutputStruct.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import functools, traceback

import Ui_dialog_selectStruct as selectStructDialogPY
import Ui_dialog_seed as seedDialogPY
import Ui_dialog_output as outputDialogPY


class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(400, 227)
        self.inputBtn = QtWidgets.QPushButton(Dialog)
        self.inputBtn.setGeometry(QtCore.QRect(70, 70, 111, 61))
        self.inputBtn.setObjectName("inputBtn")
        self.outputBtn = QtWidgets.QPushButton(Dialog)
        self.outputBtn.setGeometry(QtCore.QRect(230, 70, 111, 61))
        self.outputBtn.setObjectName("outputBtn")
        self.tipLabel = QtWidgets.QLabel(Dialog)
        self.tipLabel.setGeometry(QtCore.QRect(130, 30, 161, 16))
        self.tipLabel.setObjectName("tipLabel")
        self.inputTipLabel = QtWidgets.QLabel(Dialog)
        self.inputTipLabel.setGeometry(QtCore.QRect(140, 150, 72, 15))
        self.inputTipLabel.setObjectName("inputTipLabel")
        self.outputTipLabel = QtWidgets.QLabel(Dialog)
        self.outputTipLabel.setGeometry(QtCore.QRect(140, 190, 72, 15))
        self.outputTipLabel.setObjectName("outputTipLabel")
        self.inputStructLabel = QtWidgets.QLabel(Dialog)
        self.inputStructLabel.setGeometry(QtCore.QRect(220, 150, 161, 16))
        self.inputStructLabel.setObjectName("inputStructLabel")
        self.outputStructLabel = QtWidgets.QLabel(Dialog)
        self.outputStructLabel.setGeometry(QtCore.QRect(220, 190, 161, 16))
        self.outputStructLabel.setObjectName("outputStructLabel")

        # =========================================================================
        self.inputBtn.clicked.connect(functools.partial(self.popStructDialog, "input"))
        self.outputBtn.clicked.connect(functools.partial(self.popStructDialog, "output"))
        # =========================================================================

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)


    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "选择格式"))
        self.inputBtn.setText(_translate("Dialog", "输入"))
        self.outputBtn.setText(_translate("Dialog", "输出"))
        self.tipLabel.setText(_translate("Dialog", "请选择输入与输出格式"))
        self.inputTipLabel.setText(_translate("Dialog", "输入格式:"))
        self.outputTipLabel.setText(_translate("Dialog", "输出格式:"))
        self.inputStructLabel.setText(_translate("Dialog", "暂无"))
        self.outputStructLabel.setText(_translate("Dialog", "暂无"))


    def setValues(self, header_loc_list):
        """设置一些初始值

        Parameters
        ----------
        header_loc_list : list
            头文件位置列表

        Notes
        -----
        [description]
        """
        self.header_loc_list = header_loc_list


    def popStructDialog(self, choice):
        """弹出选择结构体的界面

        Parameters
        ----------
        choice : str
            表示按下了哪个按钮，如果按下了输入按钮choice的值就是input，输出是output

        Notes
        -----
        [description]
        """
        # 询问用户是否读取JSON
        readJSON = False
        whetherReadJSONBox = QtWidgets.QMessageBox(QtWidgets.QMessageBox.Question, "读取文件", "是否读取现有JSON文件?")
        yes = whetherReadJSONBox.addButton("是", QtWidgets.QMessageBox.YesRole)
        no = whetherReadJSONBox.addButton("否", QtWidgets.QMessageBox.NoRole)
        whetherReadJSONBox.exec_()
        if whetherReadJSONBox.clickedButton() == yes:
            readJSON = True

        # 如果读取现有文件，就让用户选择JSON
        # TODO 完善读取JSON与输入输出格式的界面
        if readJSON:
            selectedFile = QtWidgets.QFileDialog.getOpenFileName(None, "choose file", "C:/Users/Radon/Desktop/", filter="json file (*.json)")
            JSONPath = selectedFile[0]
            try:
                # 如果JSONPath是空字符串，表示用户点击了右上角的X
                if JSONPath == "":
                    return
                if choice == "input":
                    self.seedDialog = QtWidgets.QDialog()
                    self.uiSeed = seedDialogPY.Ui_Dialog()
                    self.uiSeed.setupUi(self.seedDialog)
                    self.seedDialog.show()
                    # 如果读取JSON的话，后两个参数其实是用不上的
                    self.uiSeed.initStructDict(self.header_loc_list, JSONPath, readJSON, struct="struct", allStruct=["all","struct"])
                elif choice == "output":
                    self.outputDialog = QtWidgets.QDialog()
                    self.uiOutput = outputDialogPY.Ui_Dialog()
                    self.uiOutput.setupUi(self.outputDialog)
                    self.outputDialog.show()
                    self.uiOutput.initStructDict(self.header_loc_list, JSONPath, readJSON, struct="struct", allStruct=["all","Struct"])
            except BaseException as e:
                traceback.print_exc()
                loadJSONFailedBox = QtWidgets.QMessageBox(QtWidgets.QMessageBox.Warning, "读取失败", "JSON文件读取失败!")
                loadJSONFailedBox.exec_()
        # 如果不读取现有文件，就让用户选择输入/输出变量格式
        else:
            self.selectStructDialog = QtWidgets.QDialog()
            self.uiSelectStruct = selectStructDialogPY.Ui_Dialog()
            self.uiSelectStruct.setupUi(self.selectStructDialog)
            self.selectStructDialog.show()
            self.uiSelectStruct.setValues(self.header_loc_list, choice, self)


import sys
from PyQt5 import QtWidgets

if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    headerNotExistBox = QtWidgets.QMessageBox(QtWidgets.QMessageBox.Information, "消息", "请运行Ui_window.py :)")
    headerNotExistBox.exec_()