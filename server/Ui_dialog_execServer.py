'''
Author: Radon
Date: 2021-08-11 21:25:35
LastEditors: Radon
LastEditTime: 2021-08-12 21:57:16
Description: Hi, say something
'''
# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'd:\Project_VSCode\python\fuzzProject\server\dialog_execServer.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QThread

import subprocess, traceback


class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(400, 300)
        self.execInfoTextBrowser = QtWidgets.QTextBrowser(Dialog)
        self.execInfoTextBrowser.setGeometry(QtCore.QRect(80, 30, 256, 192))
        self.execInfoTextBrowser.setObjectName("execInfoTextBrowser")
        self.stopBtn = QtWidgets.QPushButton(Dialog)
        self.stopBtn.setGeometry(QtCore.QRect(90, 240, 93, 28))
        self.stopBtn.setObjectName("stopBtn")
        self.closeBtn = QtWidgets.QPushButton(Dialog)
        self.closeBtn.setEnabled(False)
        self.closeBtn.setGeometry(QtCore.QRect(220, 240, 93, 28))
        self.closeBtn.setObjectName("closeBtn")

        # ==========settings=======================================================
        # 右上角仅设置最小化按钮可用
        Dialog.setWindowFlags(QtCore.Qt.WindowMinimizeButtonHint)
        self.closeBtn.clicked.connect(Dialog.accept)
        # =========================================================================

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "服务端运行信息"))
        self.stopBtn.setText(_translate("Dialog", "停止"))
        self.closeBtn.setText(_translate("Dialog", "关闭页面"))

# ==========startServer============================================================
    def startServer(self, program_loc, ui, uiExecServer):
        self.serverExecThread = serverExecThread()
        self.serverExecThread.setValues(program_loc, ui, uiExecServer)
        self.stopBtn.clicked.connect(self.stopServer)
        self.execInfoTextBrowser.setText("程序运行中...")


    def stopServer(self):
        self.serverExecThread.stopThread = True
        while self.serverExecThread.isRunning():
            pass
        self.stopBtn.setEnabled(False)
        self.closeBtn.setEnabled(True)


class serverExecThread(QThread):
    def __init__(self):
        super().__init__()


    def setValues(self, program_loc, ui, uiExecServer):
        self.program_loc = program_loc
        self.ui = ui
        self.uiExecServer = uiExecServer
        self.stopThread = False
        self.start()


    def run(self):
        print("ServerExecThread started")
        i = 0
        # TODO 这里的循环条件还得改
        while True:
            i += 1
            if self.stopThread:
                break
            try:
                subprocess.check_output(self.program_loc, timeout=5)
                self.uiExecServer.execInfoTextBrowser.append("成功结束 - " + str(i))
            except subprocess.TimeoutExpired as e:
                print("\033[1;31m")
                traceback.print_exc()
                print("\033[0m]")
                self.uiExecServer.execInfoTextBrowser.append("超时 - " + str(i))
        print("It stopped!")
